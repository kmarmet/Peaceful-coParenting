{
  "version": 3,
  "file": "pushAlert.js",
  "sourceRoot": "\\",
  "sources": [
    "pushAlert.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# Import required modules\r\nimport NotificationManager from \"../managers/notificationManager\"\r\nimport Manager from \"../managers/manager\"\r\n# Define PushAlertApi object\r\nPushAlertApi =\r\n# Define line break constant\r\n  lineBreak: '\\r\\n'\r\n\r\n# Define message templates\r\n  templates:\r\n# Template for event tomorrow reminder\r\n    eventIsTomorrowReminder: (event) ->\r\n      \"#{event.title} is tomorrow #{if Manager.isValid(event.fromTime) then '@ ' + event.fromTime else ''}\"\r\n\r\n# Template for event in an hour reminder\r\n    eventIsInAnHourReminder: (event) ->\r\n      \"#{event.title} is in 1 hour\"\r\n\r\n# Template for event in half hour reminder\r\n    eventIsInHalfHourReminder: (event) ->\r\n      \"#{event.title} is in 30 minutes\"\r\n\r\n# Template for update reminder\r\n    updateReminder: ->\r\n      'Visit New Updates in the menu to learn more'\r\n\r\n# Template for swap request decision\r\n    swapRequestDecision: (request, decision) ->\r\n      \"A new Swap Request decision for #{request.fromDate} has been made by #{request.createdBy}#{PushAlertApi.lineBreak}#{PushAlertApi.lineBreak}Decision: #{decision}\"\r\n\r\n# Determine API URL based on environment\r\n  apiUrl: ->\r\n    if location.hostname is 'localhost'\r\n      'http://localhost:3002'\r\n    else\r\n      'https://www.peaceful-coparenting.com'\r\n\r\n# Send message to all users\r\n  sendToAll: (title, message) ->\r\n    fetch 'https://peaceful-coparenting.app:5000/messaging/sendToAll',\r\n      method: 'POST'\r\n      mode: 'no-cors'\r\n      body: JSON.stringify\r\n        title: title\r\n        message: message\r\n\r\n# Subscribe a user to push notifications\r\n  subscribeUser: (userPhone) ->\r\n    myHeaders = new Headers()\r\n    myHeaders.append 'Content-Type', 'application/json'\r\n    myHeaders.append 'Authorization', '461dafa18ed1684310b34ae8d00f746e'\r\n    myHeaders.append 'Access-Control-Allow-Origin', '*'\r\n\r\n    urlToUse = 'https://api.pushalert.co/rest/v1/segment/38837/add'\r\n\r\n    requestOptions =\r\n      method: 'POST'\r\n      mode: 'no-cors'\r\n      headers: myHeaders\r\n      body: JSON.stringify\r\n        subscibers: [userPhone]\r\n      redirect: 'follow'\r\n\r\n    fetch(urlToUse, requestOptions)\r\n      .then (result) -> console.log result\r\n      .catch (error) -> console.error error\r\n\r\n# Send a message to a specific user\r\n  sendMessage: (title, message, subId) ->\r\n    myHeaders = new Headers()\r\n    myHeaders.append 'Access-Control-Allow-Headers', 'Content-Type, x-requested-with'\r\n    myHeaders.append 'Access-Control-Allow-Origin', '*'\r\n    subIdToUse = subId\r\n    urlToUse = 'https://peaceful-coparenting.app:5000/messaging/sendMessage'\r\n\r\n    urlencoded = new URLSearchParams()\r\n    urlencoded.append 'title', title\r\n    urlencoded.append 'url', 'https://www.peaceful-coparenting.com'\r\n    urlencoded.append 'message', message\r\n    urlencoded.append 'subscriber', subIdToUse\r\n\r\n    requestOptions =\r\n      method: 'POST'\r\n      mode: 'no-cors'\r\n      headers: myHeaders\r\n      body: urlencoded\r\n      redirect: 'follow'\r\n\r\n    if location.hostname isnt \"localhost\"\r\n      fetch(urlToUse, requestOptions)\r\n        .then (result) -> console.log \"Sent to: #{subIdToUse}\"\r\n        .catch (error) -> console.error error\r\n    else\r\n      fetch(urlToUse, requestOptions)\r\n        .then (result) -> console.log \"Sent to: #{subIdToUse}\"\r\n        .catch (error) -> console.error error\r\n\r\n# Get subscriber ID for a user\r\n  getSubId: (userPhone) ->\r\n    await NotificationManager.getUserSubId(userPhone)\r\n\r\n# Export PushAlertApi object\r\nexport default PushAlertApi\r\n\r\n"
  ]
}